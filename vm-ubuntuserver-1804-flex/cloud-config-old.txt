#cloud-config

# code: language=yaml
# vim: set ft=yaml:expandtab:ts=2
# The previous lines enable syntax highlighting, etc. in VS Code and vim. KEEP THEM AT THE BEGINING OF THE FILE! For more info see:
# https://marketplace.visualstudio.com/items?itemName=chrislajoie.vscode-modelines
#
# cloud-init config file used in the former "vm-ubuntuserver-1804" template, provided as an example only (...)
# IMPORTANT NOTE: this file is no longer used / mantained, and now NO LONGER CORRESPONDS to the customData parameter in the template !
#
# Version: 1.X.X.X, 2021-01-21. Changelog:
# - DEBIAN_FRONTEND=noninteractive env. var. defined for "safer" apt-get usage (...)
# - Added some more basic (apt) packages, to be safe
# Version: 1.4.0.0, 2020-12-30. Changelog:
# - PostgreSQL 12 installation made optional (PostgreSQL was introduced in previous non-production version, 1.3.0.0)
# - Package "python3-psycopg2" installation made optional (PostgreSQL)
# - IMPORTANT CHANGE: Python packages (pip) installation made optional
# Version: 1.3.0.0, 2020-12-29. Changelog:
# - added PostgreSQL 12 installation from official apt repository
# - added the following packages: python3-venv python3-wheel
# - removed the following packages (almost always unused): coinor-cbc glpk-utils
# - minor changes in system tools packages installed: neofetch for system info, gdb for omsagent, etc.
# - improved apt-get usage (using dist-upgrade for better dependencies management, adding autoremove)
# - change permissions (disable access for others) of /home/belero folder
# - added cloud-init environment info at the beginning, for log purposes
# - improvements in the system info shown at each login (/etc/update-motd.d/50-belero-sysinfo, etc.)
# - IMPORTANT CHANGES in pip usage:
#    - Installing of packages is now done in the recommended way (user-install)
#    - pip invocation in the recommended way (with "python3 -m pip"...)
#    - pip is also updated (for user-install only; and to a version <20.3, which has major changes)
# Version: 1.2.0.0, 2020-04-16. Changelog:
# - changes in packages installed, for DB access: mdbtools python3-psycopg2
# - changes in Python packages (pip) installed, for DB access: pymysql pandas_access
# Version: 1.1.0.0, 2019-11-05. Changelog:
# - contents of this file is now also embedded in template.json (customData parameter), for consistency;
#   use from Azure Portal will now produce the same results as manual use (with deploy.sh, etc.)
# Version: 1.0.6.0, 2019-10-25. Changelog:
# - profile settings moved to /etc/profile.d/...
# - Azure ephemeral disk back to its default path /mnt, and "our" mounts now in /media
# - new hack to print some cloud instance info at login
# Version: 1.0.5.0. Changelog:
# - new hack to add some debug info to the user history (access time, IP address, etc.) at login
# (...)


# Create (or append to) files. write_files runs (only during the first boot) very soon
# in the cloud-init process (before mounts, creating users/groups, timezone, runcmd, etc.)
#
# NOTE: when writing files, DO NOT use /tmp or /home/xxx dirs, as it can cause problems
write_files:
# Customized (system-wide) environment variables and commands at each login
  - path: /etc/profile.d/Z99-zz-belero.sh
    owner: root:root
    permissions: '0755'
    content: |
      # Belerofontech cloud-init generated file
      #
      export EDITOR=vim
      export VISUAL=vim
      # Belerofontech matplotlib configuration for headless server
      export MPLBACKEND=agg
      # Belerofontech hack to add some debug info to the user history (access time, IP address, etc.) at login
      history -r && history -s echo @@@ LOGIN @@@ $(last -n1 --time iso | head -n1)
# Customized user config (default editor). Otherwise, this is asked the first time it is needed
# NOTE: creating files directly inside the home dirs at this stage seems to break user's home creation later!
  - path: /etc/skel/.selected_editor
    owner: root:root
    permissions: '0664'
    content: |
      # Generated by /usr/bin/select-editor; Belerofontech cloud-init generated
      SELECTED_EDITOR="/usr/bin/vim.basic"
# # Configure byobu (simplified tmux wrapper) to use CTRL-B as prefix
# # TO-DO: check, creating only this file from byobu's config does not seem to wokr OK
#   - path: /etc/skel/.byobu/keybindings.tmux
#     owner: root:root
#     permissions: '0644'
#     content: |
#       unbind-key -n C-a
#       unbind-key -n C-b
#       set -g prefix ^B
#       set -g prefix2 F12
#       bind b send-prefix
# Customized system info shown at each login
# Originally, there was a similar behaviour with 50-landscape-sysinfo (symlink to /usr/share/landscape/landscape-sysinfo.wrapper ...)
  - path: /etc/update-motd.d/50-belero-sysinfo
    owner: root:root
    permissions: '0755'
    content: |
      #!/bin/sh
      # Belerofontech cloud-init generated file
      #
      # Customized system info shown at each login (MOTD), instead of the default one
      echo
      ## TO-DO: Optional: more changes in the info that is shown by neofetch (...)
      ## Config in: /etc/neofetch/... or in /home/belero/.config/neofetch/config.conf
      which neofetch 2>/dev/null >/dev/null && neofetch --config none --shell_path on --cpu_display infobar --memory_display infobar --battery_display infobar --disk_display infobar
      echo
      echo BELEROFONTECH AZURE VIRTUAL MACHINE. Cloud-init instance info:
      cloud-init query ds.meta_data | grep -e '"name"\|"resourceGroupName"\|"subscriptionId"\|"tags"\|pAddress": "' | xargs echo
      ## TO-DO: get also the DNS name. Needs Azure CLI installed, and getting VM info (group, etc.) previously (...)
      ## https://docs.microsoft.com/en-us/cli/azure/network/public-ip?view=azure-cli-latest#az_network_public_ip_show
      ## az network public-ip show -g RESOURCEGROUP... -n vm-nic-name... -o json --query "{fqdn: dnsSettings.fqdn, publicIpAddress: ipAddress}" | tr -d '{}' ) | xargs echo
      echo
      w
      # Show only info about zombie processes, inspired from the original landscape-sysinfo output
      # which landscape-sysinfo 2>/dev/null >/dev/null && landscape-sysinfo --sysinfo-plugins=Processes 2>/dev/null
      ps -elf | grep "^[0-9]\+ Z " | grep " Z " && ps -elf | head -n1 && echo "Zombie process(es) detected!" | grep "Zombie.*"
      # NOTE: this script must finish successfully for the MOTD info to be correctly updated and shown!
      exit 0
# Small "notice" (informative) file at the usual directory for mounts
  - path: /media/belero/README.txt
    owner: root:root
    permissions: '0644'
    content: |
      This directory is used for shared data and utilities
# # NOTE: uncomment this part for each mount point used. This way, there is a "notice" file to make it clear
#   - path: /media/belero/beleroscripts/README.txt
#     owner: root:root
#     permissions: '0644'
#     content: |
#       This directory is used as a mount point for an Azure Files fileshare.
#       If you are seeing this file, the fileshare is not mounted properly!


# mount points. From https://cloudinit.readthedocs.io/en/latest/topics/examples.html
# NOTE: complete the missing info (passwords), maybe adjust some settings, and uncomment
# the section below to add one (or more) automatic mount points, i.e. for Azure File shares
#
# IMPORTANT NOTE: these mount points (created with cloud.init) will be PERMANENT, there is
# no way to remove them afterwards because Azure will re-create them, so use only if needed.
#
# RECOMMENDED ALTERNATIVE: manually (or with runcmd) add entries to /etc/fstab instead
#
# mounts:
#   - [ "//internalscriptstorage.file.core.windows.net/beleroscripts", "/media/belero/beleroscripts", "cifs",
#       "defaults,nofail,nosuid,nodev,noexec,noperm,ro,vers=3.0,gid=sudo,dir_mode=0770,file_mode=0770,sec=ntlmssp,\
#       serverino,nosharesock,actimeo=5,\
#       credentials=/etc/smbcredentials/internalscriptstorage.cred" ]
# NOTE: the .cred file must have permissions only for root. For more info see https://help.ubuntu.com/community/Fstab
# The file can be created manually afterwards (recommended), or with runcmd / write_files. Example file contents:
# username=internalscriptstorage
# password=REPLACE_WITH_STORAGE_ACCOUNT_ACCESS_KEY_FOR_FILE_SHARE_MOUNT

# mount_default_fields. From https://cloudinit.readthedocs.io/en/latest/topics/examples.html
# These values are used to fill in any entries in 'mounts' that are not
# complete. This must be an array, and must have 6 fields.
mount_default_fields: [ None, None, "auto", "defaults,nofail", "0", "2" ]


# Optional: tz config (NOTE: in Azure, use only if completely necessary!); the value must exist in /usr/share/zoneinfo
# timezone: Europe/Madrid


# run commands. runcmd contains a list of either lists or a string; each item
# will be executed in order at rc.local like level with output to the console
# - runcmd only runs during the first boot
# - if the item is a list, the items will be properly executed as if
#   passed to execve(3) (with the first arg as the command). Example:
#   - [ "sh", "-c", "echo $(date) ': STARTING CUSTOM CLOUD-INIT!'" ]
# - if the item is a string, it will be simply written to the file and
#   will be interpreted by 'sh'
#
# NOTE: the list has to be proper YAML, so you have to quote any chars than can
# be problematic (: { } [ ] , & * # ? | - < > = ! % @ \). For more info see:
# https://stackoverflow.com/a/22235064
#
# NOTE: when writing files, DO NOT use /tmp dir as it can cause problems
runcmd:
 - echo "BELEROFONTECH - STARTING CUSTOM CLOUD-INIT!"
 - sh -xc 'date ; env ; last ; w ; whoami ; pwd'
 - chmod 0750 /home/belero
# # PostgreSQL 12 official apt repository. For more info see:
# # https://www.postgresql.org/download/linux/ubuntu/
#  - sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
#  - wget --quiet -O - 'https://www.postgresql.org/media/keys/ACCC4CF8.asc' | apt-key add -
 - DEBIAN_FRONTEND=noninteractive apt-get -y update && DEBIAN_FRONTEND=noninteractive apt-get -y -u dist-upgrade
 - DEBIAN_FRONTEND=noninteractive apt-get -y install apt-transport-https ca-certificates curl cifs-utils dos2unix colorized-logs ccze byobu gdb zip unzip bc vim neofetch
# - DEBIAN_FRONTEND=noninteractive apt-get -y install coinor-cbc glpk-utils
 - DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential python3-pip python3-venv python3-wheel unixodbc-dev mdbtools
# # PostgreSQL 12 installation:
#  - DEBIAN_FRONTEND=noninteractive apt-get -y install postgresql-12 postgresql-client-12 postgresql-doc-12 pgtop python3-psycopg2
# # TO-DO: Remove Python 2 and set Python 3 as the default for scripts that use just "python". From:
# # https://stackoverflow.com/a/50331137
#  - DEBIAN_FRONTEND=noninteractive apt-get -y remove python2.7 python2.7-minimal python-minimal
# # TO-DO: check, the following line is not needed really...
# # - update-alternatives --remove python /usr/bin/python2
#  - update-alternatives --install /usr/bin/python python /usr/bin/python3 10
#  - update-alternatives --set python /usr/bin/python3
# Remove some of the default system info shown at each login
 - DEBIAN_FRONTEND=noninteractive apt-get -y remove landscape-common
 - systemctl disable motd-news.timer
# Alternative to the next lines: rm -f /etc/update-motd.d/00-header /etc/update-motd.d/10-help-text /etc/update-motd.d/50-motd-news /etc/update-motd.d/91-release-upgrade
 - chmod -x /etc/update-motd.d/00-header
 - chmod -x /etc/update-motd.d/10-help-text
 - chmod -x /etc/update-motd.d/50-motd-news
 - chmod -x /etc/update-motd.d/91-release-upgrade
# # TO-DO: Configure and auto-activate byobu at login (simplified tmux wrapper)
#  - sudo -E -u belero byobu-enable
#  - sudo -E -u belero byobu-enable-prompt
#  - sudo -E -u belero byobu-ctrl-a emacs
# # Enable again all the usual system info at each login (byobu disables it by creating this file)
#  - rm -f /home/belero/.hushlogin
 - DEBIAN_FRONTEND=noninteractive apt-get -y autoremove
 - DEBIAN_FRONTEND=noninteractive apt-get clean
# # Update Python pip (but not to 20.3 version or later, which has big changes in dependency management!)
#  - sudo -E -u belero python3 -m pip install --user --upgrade 'pip<20.3'
# # Install desired Python packages with pip (user mode!)
#  - sudo -E -u belero python3 -m pip install --user pandas pyomo xlwt xlrd openpyxl matplotlib pillow scipy statsmodels xlsxwriter pyodbc sqlalchemy pymysql pandas_access
# TO-DO: check; this package fails to install!
#  - sudo -E -u belero python3 -m pip install --user streamlit
# TO-DO: check; this package fails to install!
#  - sudo -E -u belero python3 -m pip install --user pandas_profiling
 - update-alternatives --set editor /usr/bin/vim.basic
# Link to the cloud-init logs, to facilitate checking them after VM creation (also allows to indicate that it has almost ended)
 - ln -s /var/log/cloud-init-output.log /home/belero
# Update the file search DB for the "locate" system tool
 - updatedb


# final_message. this message is written by cloud-final when the system is finished its first boot
final_message: "The system is finally up ($TIMESTAMP), after $UPTIME seconds"


# phone_home. If uncommented, then cloud-config will post specified data back to the given url
# Some of the fields sent are: pub_key_dsa, pub_key_rsa, pub_key_ecdsa, hostname, instance_id
# phone_home:
# #   url: http://my.foo.bar/$INSTANCE/
# #   url: https://xyz.m.pipedream.net
#   url: https://prod-22.westeurope.logic.azure.com/workflows/xyz
# #  post: all
#   post: [ hostname, instance_id ]
#   tries: 2


# TO-DO: poweroff or reboot system after finished. For more info see:
# https://cloudinit.readthedocs.io/en/latest/topics/examples.html
# If you delay '+2' (2 minutes) and have a timeout of 120 (2 minutes),
# then the max time until shutdown will be 4 minutes.
# cloud-init will invoke 'shutdown +2' after the process finishes, or
# when 'timeout' seconds have elapsed.
# power_state:
#   delay: "+2"
#   mode: reboot
#   message: Reboot after cloud-init has finished
#   timeout: 120
#   condition: True
